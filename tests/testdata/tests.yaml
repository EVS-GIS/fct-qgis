tests:

  - name: Points On Surface # Human readable identifier
    algorithm: fluvialcorridortoolbox:pointonsurface # Algorithm name
    params: # A list of parameters (only 1 here)
      INPUT:
        type: vector       # Param is a vector layer
        name: polygons.gml # file name
    results: # A map of results (only one here)
      OUTPUT:
        type: vector   # Expected result is a vector layer
        name: expected/points_on_surface.gml # The relative filepath from the processing testdata directory
        compare:
          geometry:
            precision: 7

  - name: Identify Network Nodes
    algorithm: fluvialcorridortoolbox:identifynetworknodes
    params:
      INPUT:
        type: vector
        name: hydrography/network0.gml
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/identify_network_nodes.gml
        compare:
          NODE_A: yes
          NODE_B: yes
          geometry:
            precision: 7

  - name: Sequencing
    algorithm: fluvialcorridortoolbox:sequencing
    params:
      INPUT:
        type: vector
        name: hydrography/network0.gml
        selection: [ 31 ]
      SEARCH_DISTANCE: 0.1
    results:
      ENDPOINTS:
        type: vector
        name: hydrography/expected/sequencing_endpoints.gml
        compare:
          geometry:
            precision: 7
      UNMATCHED:
        type: vector
        name: hydrography/expected/sequencing_unmatched.gml
        compare:
          geometry:
            precision: 7
      OUTPUT:
        type: vector
        name: hydrography/expected/sequencing_output.gml
        compare:
          NODE_A: yes
          NODE_B: yes
          MEAS_A:
            precision: 2
          MEAS_B:
            precision: 2
          geometry:
            precision: 7

  - name: Strahler Order
    algorithm: fluvialcorridortoolbox:strahlerorder
    params:
      INPUT:
        type: vector
        name: hydrography/expected/identify_network_nodes.gml
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/strahler_order.gml
        compare:
          STRAHLER:
            precision: 2
          geometry:
            precision: 7

  - name: Measure Lines From Outlet
    algorithm: fluvialcorridortoolbox:measurelinesfromoutlet
    params:
      INPUT:
        type: vector
        name: hydrography/expected/identify_network_nodes.gml
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/measured_lines.gml
        compare:
          MEASA:
            precision: 2
          MEASB:
            precision: 2
          LENGTH:
            precision: 2
          geometry:
            precision: 7

  - name: Network Nodes
    algorithm: fluvialcorridortoolbox:networknodes
    params:
      INPUT:
        type: vector
        name: hydrography/expected/measured_lines.gml
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
      MEAS_FIELD: MEASA
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/network_nodes.gml
        compare:
          GID: yes
          TYPE: yes
          DIN: yes
          DOUT: yes
          geometry:
            precision: 7

  - name: Densify Network Nodes
    algorithm: fluvialcorridortoolbox:densifynetworknodes
    params:
      INPUT:
        type: vector
        name: hydrography/expected/measured_lines.gml
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
      MEAS_FIELD: MEASA
      MAX_DISTANCE: 20.0
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/densified_network.gml
        compare:
          NODE_A: yes
          NODE_B: yes
          MEASA:
            precision: 2
          geometry:
            precision: 7

  - name: Length Order
    algorithm: fluvialcorridortoolbox:lengthorder
    params:
      INPUT:
        type: vector
        name: hydrography/expected/measured_lines.gml
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
      MEAS_FIELD: MEASA
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/length_order.gml
        compare:
          PRANK: yes
          PATHID: yes
          PLENGTH:
            precision: 2
          geometry:
            precision: 7

  - name: Select Connected Components
    algorithm: fluvialcorridortoolbox:selectconnectedcomponents
    params:
      INPUT:
        type: vector
        name: hydrography/expected/identify_network_nodes.gml
        selection: [ 31 ]
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
    expected_selection:
      INPUT: [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
    results: {}

  - name: Select Downstream Components
    algorithm: fluvialcorridortoolbox:selectdownstreamcomponents
    params:
      INPUT:
        type: vector
        name: hydrography/expected/identify_network_nodes.gml
        selection: [ 1 ]
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
    expected_selection:
      INPUT: [1, 2, 4, 8, 15, 18, 24, 27, 28, 29, 30, 31, 33, 34, 37]
    results: {}

  - name: Select Upstream Components
    algorithm: fluvialcorridortoolbox:selectupstreamcomponents
    params:
      INPUT:
        type: vector
        name: hydrography/expected/identify_network_nodes.gml
        selection: [ 1 ]
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
    expected_selection:
      INPUT: [1, 5, 7, 19, 20, 21, 22, 23, 25, 26]
    results: {}

  - name: Select Full length Paths
    algorithm: fluvialcorridortoolbox:selectfulllengthpaths
    params:
      INPUT:
        type: vector
        name: hydrography/expected/length_order.gml
        selection: [ 1 ]
      PATHID_FIELD: PATHID
    expected_selection:
      INPUT: [1, 2, 4, 7, 8, 15, 18, 19, 24, 27, 28, 29, 30, 31, 33, 34, 37]
    results: {}

  - name: Select Graph Cycle
    algorithm: fluvialcorridortoolbox:selectgraphcycle
    params:
      INPUT:
        type: vector
        name: hydrography/network1.gml
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
    expected_selection:
      INPUT: [12, 16, 30]
    results: {}

  - name: Select Short Tributaries
    algorithm: fluvialcorridortoolbox:selectshorttributaries
    params:
      INPUT:
        type: vector
        name: hydrography/expected/length_order.gml
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
      DISTANCE_FIELD: MEASA
      MAX_LENGTH: 500.0
    expected_selection:
      INPUT: [3, 13, 20, 35, 36]
    results: {}

  - name: Aggregate Line Segments
    algorithm: fluvialcorridortoolbox:aggregatelinesegments
    params:
      INPUT:
        type: vector
        name: hydrography/expected/measured_lines.gml
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
      UPSTREAM_MEASURE_FIELD: MEASA
      DOWNSTREAM_MEASURE_FIELD: MEASB
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/aggregated_lines.gml
        compare:
          NODE_A: yes
          NODE_B: yes
          MEASA:
            precision: 2
          geometry:
            precision: 7

  - name: Aggregate Line Segments By Category
    algorithm: fluvialcorridortoolbox:aggregatelinesegmentsbycategory
    params:
      INPUT:
        type: vector
        name: hydrography/expected/length_order.gml
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
      UPSTREAM_MEASURE_FIELD: MEASA
      DOWNSTREAM_MEASURE_FIELD: MEASB
      CATEGORY_FIELD: PATHID
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/aggregated_lines_by_category.gml
        compare:
          NODE_A: yes
          NODE_B: yes
          MEASA:
            precision: 2
          PATHID: yes
          geometry:
            precision: 7

  - name: Reverse Flow Direction
    algorithm: fluvialcorridortoolbox:reverseflowdirection
    params:
      INPUT:
        type: vector
        name: hydrography/expected/identify_network_nodes.gml
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/reverse_flow_direction.gml
        compare:
          NODE_A: yes
          NODE_B: yes
          geometry:
            precision: 7

  - name: Longest Path In Directed Acyclic Graph
    algorithm: fluvialcorridortoolbox:longestpathindirectedacyclicgraph
    params:
      INPUT:
        type: vector
        name: hydrography/expected/identify_network_nodes.gml
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/longest_path.gml
        compare:
          NODE_A: yes
          NODE_B: yes
          geometry:
            precision: 7

  - name: Longest Path In DAG (Multiple Flow)
    algorithm: fluvialcorridortoolbox:longestpathindagmultipleflow
    params:
      INPUT:
        type: vector
        name: hydrography/expected/identify_network_nodes.gml
      FROM_NODE_FIELD: NODE_A
      TO_NODE_FIELD: NODE_B
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/longest_path_multiflow.gml
        compare:
          NODE_A: yes
          NODE_B: yes
          geometry:
            precision: 7

  - name: Project Points Along Line
    algorithm: fluvialcorridortoolbox:projectpointsalongnearestline
    params:
      INPUT:
        type: vector
        name: hydrography/points0.gml
      LINES:
        type: vector
        name: hydrography/measured_line0.gml
      MEASURE_FIELD: MEASA
      LINE_PK: LINEID
      MAX_DISTANCE: 200.0
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/projected_points.gml
        compare:
          geometry:
            precision: 7

  - name: Locate Polygon Along Line
    algorithm: fluvialcorridortoolbox:locatepolygonalongline
    params:
      INPUT:
        type: vector
        name: hydrography/polygons0.shp
      LINES:
        type: vector
        name: hydrography/network2.shp
      AXIS: PATHID
      MEASURE: MEAS_A
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/polygon_linear_location.shp
        compare:
          geometry:
            precision: 7

  - name: Measure Polygon Location Along Line
    algorithm: fluvialcorridortoolbox:projectpointsalongnearestline
    params:
      INPUT:
        type: vector
        name: hydrography/expected/polygon_linear_location.shp
      LINES:
        type: vector
        name: hydrography/network2.shp
      MEASURE_FIELD: MEAS_A
      LINE_PK: gid
      MAX_DISTANCE: 200.0
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/polygon_measured_linear_location.shp
        compare:
          geometry:
            precision: 7

  - name: Match Nearest Line
    algorithm: fluvialcorridortoolbox:matchnearestline
    params:
      INPUT:
        type: vector
        name: hydrography/hydrography3.shp
      TARGET:
        type: vector
        name: hydrography/hydrography4.shp
      TARGET_PK: ID_TRONCON
      MAX_DISTANCE: 50.0
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/matched_lines.shp
        compare:
          geometry:
            precision: 7

  - name: Match Network Nodes
    algorithm: fluvialcorridortoolbox:matchnetworknodes
    params:
      NETWORK1:
        type: vector
        name: hydrography/hydrography4.shp
      NODES1:
        type: vector
        name: hydrography/hydrography4_nodes.shp
      NETWORK2:
        type: vector
        name: hydrography/hydrography3.shp
      NODES2:
        type: vector
        name: hydrography/hydrography3_nodes.shp
      MAX_DISTANCE: 50.0
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/matched_network_nodes.shp
        compare:
          geometry:
            precision: 7
  
  - name: Match Network Segments
    algorithm: fluvialcorridortoolbox:matchnetworksegments
    params:
      NETWORK1:
        type: vector
        name: hydrography/hydrography3.shp
      NETWORK2:
        type: vector
        name: hydrography/hydrography4.shp
      NETWORK2_PK_FIELD: ID_TRONCON
      PAIRS:
        type: vector
        name: hydrography/expected/matched_network_nodes.shp
      NETWORK1_PAIR_FIELD: PAIRID
      NETWORK2_PAIR_FIELD: GID
    results:
      OUTPUT:
        type: vector
        name: hydrography/expected/matched_segments.shp
        compare:
          geometry:
            precision: 7

